{"ast":null,"code":"export const login = (username, password) => {\n  return dispatch => {\n    // Simulate an asynchronous request\n    setTimeout(() => {\n      if (username === \"admin\" && password === \"password\") {\n        dispatch(loginSuccess(username));\n      } else {\n        dispatch(loginFailure(\"Invalid username or password\"));\n      }\n    }, 2000);\n  };\n};\nexport const loginSuccess = user => {\n  return {\n    type: \"LOGIN_SUCCESS\",\n    payload: user\n  };\n};\nexport const loginFailure = error => {\n  return {\n    type: \"LOGIN_FAILURE\",\n    payload: error\n  };\n};\nexport const logout = () => {\n  return {\n    type: \"LOGOUT\"\n  };\n};","map":{"version":3,"names":["login","username","password","dispatch","setTimeout","loginSuccess","loginFailure","user","type","payload","error","logout"],"sources":["D:/Workspace/Test2/antd-demo-ts/src/components/store/actions/auth.ts"],"sourcesContent":["import { ThunkAction } from \"redux-thunk\";\r\nimport { RootState } from \"../reducers\";\r\n\r\nexport interface LoginSuccessAction {\r\n  type: \"LOGIN_SUCCESS\";\r\n  payload: string;\r\n}\r\n\r\nexport interface LoginFailureAction {\r\n  type: \"LOGIN_FAILURE\";\r\n  payload: string;\r\n}\r\n\r\nexport interface LogoutAction {\r\n  type: \"LOGOUT\";\r\n}\r\n\r\nexport type AuthAction = LoginSuccessAction | LoginFailureAction | LogoutAction;\r\n\r\nexport const login = (\r\n  username: string,\r\n  password: string\r\n): ThunkAction<void, RootState, null, AuthAction> => {\r\n  return (dispatch: Dispatch<AnyAction>) => {\r\n    // Simulate an asynchronous request\r\n    setTimeout(() => {\r\n      if (username === \"admin\" && password === \"password\") {\r\n        dispatch(loginSuccess(username));\r\n      } else {\r\n        dispatch(loginFailure(\"Invalid username or password\"));\r\n      }\r\n    }, 2000);\r\n  };\r\n};\r\n\r\nexport const loginSuccess = (user: string): AuthAction => {\r\n  return {\r\n    type: \"LOGIN_SUCCESS\",\r\n    payload: user,\r\n  };\r\n};\r\n\r\nexport const loginFailure = (error: string): AuthAction => {\r\n  return {\r\n    type: \"LOGIN_FAILURE\",\r\n    payload: error,\r\n  };\r\n};\r\n\r\nexport const logout = (): AuthAction => {\r\n  return {\r\n    type: \"LOGOUT\",\r\n  };\r\n};\r\n"],"mappings":"AAmBA,OAAO,MAAMA,KAAK,GAAGA,CACnBC,QAAgB,EAChBC,QAAgB,KACmC;EACnD,OAAQC,QAA6B,IAAK;IACxC;IACAC,UAAU,CAAC,MAAM;MACf,IAAIH,QAAQ,KAAK,OAAO,IAAIC,QAAQ,KAAK,UAAU,EAAE;QACnDC,QAAQ,CAACE,YAAY,CAACJ,QAAQ,CAAC,CAAC;MAClC,CAAC,MAAM;QACLE,QAAQ,CAACG,YAAY,CAAC,8BAA8B,CAAC,CAAC;MACxD;IACF,CAAC,EAAE,IAAI,CAAC;EACV,CAAC;AACH,CAAC;AAED,OAAO,MAAMD,YAAY,GAAIE,IAAY,IAAiB;EACxD,OAAO;IACLC,IAAI,EAAE,eAAe;IACrBC,OAAO,EAAEF;EACX,CAAC;AACH,CAAC;AAED,OAAO,MAAMD,YAAY,GAAII,KAAa,IAAiB;EACzD,OAAO;IACLF,IAAI,EAAE,eAAe;IACrBC,OAAO,EAAEC;EACX,CAAC;AACH,CAAC;AAED,OAAO,MAAMC,MAAM,GAAGA,CAAA,KAAkB;EACtC,OAAO;IACLH,IAAI,EAAE;EACR,CAAC;AACH,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}
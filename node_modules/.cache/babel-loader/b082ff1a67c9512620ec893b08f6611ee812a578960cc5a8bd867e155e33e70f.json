{"ast":null,"code":"export const login = (username, password) => {\n  return dispatch => {\n    // Simulate an asynchronous request\n    setTimeout(() => {\n      if (username === \"admin\" && password === \"password\") {\n        dispatch(loginSuccess(username));\n      } else {\n        dispatch(loginFailure(\"Invalid username or password\"));\n      }\n    }, 2000);\n  };\n};\n\n// export const loginSuccess = (user: string): AuthAction => {\n//   return {\n//     type: \"LOGIN_SUCCESS\",\n//     payload: user,\n//   };\n// };\n\n// export const loginFailure = (error: string): AuthAction => {\n//   return {\n//     type: \"LOGIN_FAILURE\",\n//     payload: error,\n//   };\n// };\n\nexport const logout = () => {\n  return {\n    type: \"LOGOUT\"\n  };\n};","map":{"version":3,"names":["login","username","password","dispatch","setTimeout","loginSuccess","loginFailure","logout","type"],"sources":["D:/Workspace/Test2/antd-demo-ts/src/components/store/actions/auth.ts"],"sourcesContent":["import { ThunkAction } from \"redux-thunk\";\r\nimport { RootState } from \"../reducers\";\r\nimport { AuthAction } from \"../reducers/auth\";\r\n\r\nexport const login = (\r\n  username: string,\r\n  password: string\r\n): ThunkAction<void, RootState, null, AuthAction> => {\r\n  return (dispatch) => {\r\n    // Simulate an asynchronous request\r\n    setTimeout(() => {\r\n      if (username === \"admin\" && password === \"password\") {\r\n        dispatch(loginSuccess(username));\r\n      } else {\r\n        dispatch(loginFailure(\"Invalid username or password\"));\r\n      }\r\n    }, 2000);\r\n  };\r\n};\r\n\r\n// export const loginSuccess = (user: string): AuthAction => {\r\n//   return {\r\n//     type: \"LOGIN_SUCCESS\",\r\n//     payload: user,\r\n//   };\r\n// };\r\n\r\n// export const loginFailure = (error: string): AuthAction => {\r\n//   return {\r\n//     type: \"LOGIN_FAILURE\",\r\n//     payload: error,\r\n//   };\r\n// };\r\n\r\nexport const logout = (): AuthAction => {\r\n  return {\r\n    type: \"LOGOUT\",\r\n  };\r\n};\r\n"],"mappings":"AAIA,OAAO,MAAMA,KAAK,GAAGA,CACnBC,QAAgB,EAChBC,QAAgB,KACmC;EACnD,OAAQC,QAAQ,IAAK;IACnB;IACAC,UAAU,CAAC,MAAM;MACf,IAAIH,QAAQ,KAAK,OAAO,IAAIC,QAAQ,KAAK,UAAU,EAAE;QACnDC,QAAQ,CAACE,YAAY,CAACJ,QAAQ,CAAC,CAAC;MAClC,CAAC,MAAM;QACLE,QAAQ,CAACG,YAAY,CAAC,8BAA8B,CAAC,CAAC;MACxD;IACF,CAAC,EAAE,IAAI,CAAC;EACV,CAAC;AACH,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,MAAM,GAAGA,CAAA,KAAkB;EACtC,OAAO;IACLC,IAAI,EAAE;EACR,CAAC;AACH,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}